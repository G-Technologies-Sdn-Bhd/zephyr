/*
 * Copyright (c) 2021 G-Technologies Sdn. Bhd.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <zephyr.h>
#include <sys/printk.h>
#include <drivers/sensor.h>
#include <drivers/sensor/jsymk163.h>
// #include <drivers/sensor/hdx8agh.h>


// void jsy(const struct device *dev)
// {

// 	struct sensor_value val[4];
// 	// int ret;

// 	// printk(" MK-163 1-Channel current  sensor application %s\n", dev->name);


// 	// while (1) {
// 	// sensor_sample_fetch(dev);

// 		if (sensor_channel_get(dev, SENSOR_CHAN_CURRENT_JSYMK163_3, val) != 0) {
// 			printk("sensor: channel get fail.\n");
// 			return;
// 		}
// 		// sensor_channel_get(dev, SENSOR_CHAN_CURRENT_1, val);
// 		printk("MK-163 Unit 3 Current reading:A:%.2f\tB:%.2f\tC:%.2f\tD:%.2f\n",
// 		       sensor_value_to_double(&val[0]), sensor_value_to_double(&val[1]),
// 		       sensor_value_to_double(&val[2]), sensor_value_to_double(&val[3]));
// 		k_msleep(500);

// 	// }
// }

void hdx(const struct device *dev)
{

	struct sensor_value val[8];
	int ret;

	// printk(" HDX8AGH 8-Channel current  sensor application %s\n", dev->name);


	// sensor_sample_fetch(dev);
	// while (1) {
		// if (sensor_channel_get(dev, SENSOR_CHAN_CURRENT_HDX8AGH_2, val) != 0) {
		// 	printk("sensor: channel get fail.\n");
		// 	return;
		// }
		// printk("sensor: device found %s.\n",dev->name);
		// printk(" HDX8AGH 8-Channel Unit 2 Current reading:A:%.2f\tB:%.2f\tC:%.2f\tD:%.2f\tE:%.2f\tF:%.2f\tG:%.2f\tH:%.2f\n",
		//        sensor_value_to_double(&val[0]), sensor_value_to_double(&val[1]),
		//        sensor_value_to_double(&val[2]), sensor_value_to_double(&val[3]),
		//        sensor_value_to_double(&val[4]), sensor_value_to_double(&val[5]),
		//        sensor_value_to_double(&val[6]), sensor_value_to_double(&val[7]));

		// k_msleep(1000);

		// if (sensor_channel_get(dev, SENSOR_CHAN_CURRENT_HDX8AGH_2, val) != 0) {
		// 	printk("sensor: channel get fail.\n");
		// 	return;
		// }
		// printk("\n");
		// printk(" HDX8AGH 8-Channel Unit 3 Current reading:\nA:%.2f\nB:%.2f\nC:%.2f\nD:%.2f\nE:%.2f\nF:%.2f\nG:%.2f\nH:%.2f\n",
		//        sensor_value_to_double(&val[0]), sensor_value_to_double(&val[1]),
		//        sensor_value_to_double(&val[2]), sensor_value_to_double(&val[3]),
		//        sensor_value_to_double(&val[4]), sensor_value_to_double(&val[5]),
		//        sensor_value_to_double(&val[6]), sensor_value_to_double(&val[7]));


	// }
	// ret = sensor_channel_get(dev, SENSOR_CHAN_CURRENT_HDX8AGH_3, val) ;

	// if (ret!= 0) {
	// 		printk("sensor: channel get fail. %d\n",ret);
	// 		return;
	// 	}
	// 	printk("\n");

	// 	printk("MK-163 Unit 3 Current reading:\nA:%.2f\nB:%.2f\nC:%.2f\nD:%.2f\n",
	// 	       sensor_value_to_double(&val[0]), sensor_value_to_double(&val[1]),
	// 	       sensor_value_to_double(&val[2]), sensor_value_to_double(&val[3]));

	// 	k_msleep(2000);
}
int main(void)
{
	const struct device *HD8AGH = device_get_binding("HD8AGH");
 	const struct device *MK163 = device_get_binding("MK-163");
	// hdx();
	// k_msleep(1000);
	while(1)
	{
	jsy(MK163);
	//  k_msleep(1000);
	//  hdx(HD8AGH
	  k_msleep(1000);
	}
}

